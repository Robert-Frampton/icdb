{"title":"ICDB","githubRepo":"jbalsas/icdb","googleAnalytics":"UA-37033501-5","index":{"title":"Conferences, talks and tech","description":"The Internet Conference Database is a place to comment and share tech talks and conferences around the world","content":" Copyright © 2017 Liferay, Inc Powered by WeDeploy™ ","srcFilePath":"src/pages/index.soy","id":"pages","url":"/.","children":{"confs":{"title":"Conferences","description":"Start exploring your favourite talks and conferences.","content":" Conferences Explore, comment and share your favourite tech talks and conferences. Choose a Conference Each one provides additional information of every talk of the event. ","srcFilePath":"src/pages/confs/index.soy","id":"confs","url":"/confs","children":{"search":{"title":"Search","description":"Find what you're looking for in the documentation.","hidden":true,"content":" Search Talks Explore, comment and share your favourite tech talks and conferences. ","srcFilePath":"src/pages/confs/search.soy","id":"search","url":"/confs/search.html"},"2017_jsday_es":{"title":"JSDayES 2017","description":"JSDayES is a two-day multi-track conference (English & Spanish) focused in Javascript and its ecosystem.","layout":"conference","logo":"jsdayes.png","icon":"table","weight":1,"playlist":"PL37ZVnwpeshH37NxpV6XbgdDpY-w48hMd","content":" {$page.description}","srcFilePath":"src/pages/confs/2017_jsday_es/index.md","id":"2017_jsday_es","url":"/confs/2017_jsday_es"},"2017_cssconf_eu":{"children":{"a_unified_styling_language":{"title":"A Unified Styling Language","description":"In the past few years, we’ve witnessed a massive increase in the amount of CSS experimentation, with ideas like CSS Modules and—most controversially—the rise of CSS-in-JS. But does mixing our styles and logic run counter to the original ideas of CSS? Does it break progressive enhancement? In this talk, we’ll take an empathetic look at these new approaches, how they relate to the history of CSS, and why they might possibly hold the key to the future of CSS—all from the point-of-view of someone who has been writing CSS since 1999.","speaker":"Mark Dalgleish","twitter":"markdalgleish","video":null,"tags":["css","css-in-js"],"layout":"talk","weight":2,"content":" Notes Scoped Styles The hardest problem in front-end Different conventions: oocs, smacs, bem Why just convention? Nice to have clases generated for you You can still separate your styles into a different file! CSS Modules Critical CSS: Inlining styles for the current page to speed up initial render Smarter Optimisations: Treat classes like code Package Management: Manual CSS inclusion not coupled to a module system Non-Browser Styling: Different renderers Opinion Nice take on generated classes Lots of good resources Nice hints as to where design systems are going Related Links Related Links | Rating --- | --- oocss | ★★★☆☆ smacs | ★★★☆☆ BEM | ★★★☆☆ Glamor | ★★★☆☆ JSS | ★★★☆☆ Critical | ★★★☆☆ Aphrodite | ★★★☆☆ Atomic | ★★★☆☆ Tachyons | ★★★☆☆ Styletron | ★★★☆☆ Polished | ★★★☆☆ Yoga | ★★★☆☆ react-native-web | ★★★☆☆ react-primitives | ★★★☆☆ ReactXP | ★★★☆☆ React Sketch.app | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/a_unified_styling_language.md","id":"a_unified_styling_language","url":"/confs/2017_cssconf_eu/a_unified_styling_language.html"},"css_and_the_first_meaningful_paint":{"title":"CSS and the first meaningful paint","description":"To render a webpage browsers needs to go through the complex dance of networking, parsing and painting before any content can be displayed to your user. Over the years, we've developed mechanisms and hacks to aid the browser at each stage of this process, but these have always come at some cost or trade-off.\nHow can we utilize modern web platform features to load our CSS as fast as possible? Should we still be inlining our critical content into the document or instead, how can HTTP/2 server push and Service Workers help us?\nIn this talk we will take a journey exploring the current, past, and future best-practices for loading CSS in the browser and how we can achieve a first meaningful paint within 1000ms. Ultimately creating a faster, more resilient experience for our users.","speaker":"Patrick Hamann","twitter":"patrickhamann","video":null,"tags":["css","performance"],"layout":"talk","weight":2,"content":" Notes How do you measure performance? New metrics are user-oriented, focused on users needs and not our delivery. First Meaningful Paint Not exposed as an API yet, but talking about it. Read whitepaper! You can use Lighthouse to audit ttfmp Use Webpagetest to test on real devices in real conditions There's no single profile for the same user (conditions change) Technique | Pros | Cons --- | --- | --- Inline critical CSS | no blocking, no spof, no critical request, instant painting | reflow, cache, maintenance and automation Preload (what are your critical resources | indicate hidden resources, dictate priority, separate fetch from exec | easy to create contention, requires server logic Server Push (HTTP/2) | we eliminate a request | We get a penalty, not an improvement Async Push | | What about repeat view We have no way to indicate how things are cached - PRPL pattern! Future Early hints 103 response CACHE_DIGEST Opinion Interesting talk with emphasis in the importance of using the proper tools Related Links Related Links | Rating --- | --- Lighthouse | ★★★☆☆ WebPageTest | ★★★☆☆ Time to First Meaningful Paint Proposal | ★★★☆☆ Preload Specification Working Draft | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/css_and_the_first_meaningful_paint.md","id":"css_and_the_first_meaningful_paint","url":"/confs/2017_cssconf_eu/css_and_the_first_meaningful_paint.html"},"css_and_the_hierarchy_problem":{"title":"CSS and the hierarchy problem: What makes a CSS developer?","description":"This talk is about hierarchies: as CSS hurtles toward being object- and systems-oriented, the titles and responsibilities of designer and developer become much more fluid and yet, we continue to categorise. We draw lines between front and back end, between CSS and Javascript (“CSS isn’t _real_ development”), and even between CSS disciplines, but why? Furthermore, we implicitly draw these lines between white male developers and everyone else. This results in damaging hierarchies that threaten to devalue the work we do in diversifying CSS — both as a language and as a community.","speaker":"Ivana McConnell","twitter":"ivanamcconnell","video":null,"tags":["css","community"],"layout":"talk","weight":2,"content":" Notes What do you do? Originally CSS = Design, but the web is growing so it becomes much more than that CSS isn't really development But CSS is more than that. It touches everything. Presentation affects interaction and experience The repetition, makes it become an assumption, so the implications that one is harder and better than the other. We make wrong decissions because of that. Undervaluing CSS has consequences For salary For teams For personal health For our products Opinion A somehow bitter and reivindicative talk about the perception of CSS developement and its implications. Related Links Related Links | Rating --- | --- Seed.css | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/css_and_the_hierarchy_problem.md","id":"css_and_the_hierarchy_problem","url":"/confs/2017_cssconf_eu/css_and_the_hierarchy_problem.html"},"css_art_history_101":{"title":"CSS Art History 101: Decoding Layout Through The Ages","description":"For centuries the visual arts have been used to tell stories, warn people about dangers and invoke emotion. Today we use the internet for all those purposes and more. Just as the Vatican employed painters to spread their message – it will be the developers and designers who will lead us into the next Renaissance. But there is still a lot to learn from the great masters. In this talk, we will flexbox the Golden Ratio with Leonardo DaVinci, up the pixel ratio for our devices with the Impressionists & ”inspect elements” of some iconic works of art to make the web a more beautiful place.","speaker":"Patricia Realini","twitter":"patriciarealini","video":null,"tags":["css","inspiration"],"layout":"talk","weight":2,"content":" Notes Opinion Very abstract talk about art and css, just that no css at all was shown Related Links ","srcFilePath":"src/pages/confs/2017_cssconf_eu/css_art_history_101.md","id":"css_art_history_101","url":"/confs/2017_cssconf_eu/css_art_history_101.html"},"data_sketches_a_visualization_a_month":{"title":"Data sketch|es: A Visualization a Month","description":"Data sketches is a collaboration between Nadieh and Shirley, where they choose a topic and visualize it by the end of the month. The collaboration started for many reasons: they weren’t creating as many personal data visualization projects, so they were looking for the motivation to make more. They wanted to explore their creativity, to experiment with the tools that are out there, to learn from each other, and to have fun.\nIn this talk, Shirley and Nadieh will share the lessons they learned while working on data sketches. They will highlight their favorite months of data, sketches, and code: what made them their favorites, the mistakes made along the way, and how they overcame them. They hope that by sharing their visualizations’ humble, ugly duckling beginnings and their many (embarrassing) iterations, that it will inspire others to create their own unique and compelling visualizations.","speaker":"Nadieh Bremer & Shirley Wu","twitter":"sxywu","video":null,"tags":["css","data-visualization"],"layout":"talk","weight":2,"content":" Notes 1 topic per month to visualize Data Idea first, always Be curious, get creative with the data gathering (but play responsibly) Get a feeling of accuracy and completeness of your data Sketch Design with code (the actual data has a great impact) Go back and forth with the sketch and code to figure out what works and what doesnt Code Remix whats out there already. No need to start from scratch always Really understand the tools you use to go beyond what's already there Expect struggles (learn to love math) The other stuff matters too. Pay attention to the little details. animations, notes... Opinion Nice talk about a beautiful data-viz project Related Links Related Links | Rating --- | --- datasketch.es | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/data_sketches_a_visualization_a_month.md","id":"data_sketches_a_visualization_a_month","url":"/confs/2017_cssconf_eu/data_sketches_a_visualization_a_month.html"},"get_ready_for_the_future_of_css":{"title":"Get Ready for the Future of CSS!","description":"It’s time to start thinking about new and upcoming CSS features that will boost your workflow and give you more power and flexibility when building your projects. This talk covers the latest CSS features, including: color manipulation, custom properties, selectors level 4, and what's new in media queries. We’ll also have a look at in-browser design features like blend modes and clip-path.","speaker":"Guil Hernandez","twitter":"guilh","video":null,"tags":["css","specs"],"layout":"talk","weight":2,"content":" Notes CSS Variables (custom properties) References to values you can reuse --property-name : value; and follow the rules of the cascade and can be scoped Preprocessor variables: Static Do not run in the browser Not aware of the DOM structure You can create nice theming structures based on when the element appears without complex nested selectors, just changing the variable value. You can only use them in values. Compositing & Blending background-blend-mode mix-blend-mode backdrop-filter Shapes Use geometric shapes as css values to layout text around shape-outside + polygon() clip-path Colors Color Module Level 4 8 digit hex colors color-mod() - apply color adjustments Selector Selectors Level 4 Working Draft :matches :required | :optional :valid | :invalid @supports (feature queries) Opinion Interesting theming take on css variables without having to be dom-aware. Very nice summary of upcoming css features Related Links Related Links | Rating --- | --- CSS Shapes Editor | ★★★☆☆ Clippy | ★★★☆☆ Selectors Level 4 | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/get_ready_for_the_future_of_css.md","id":"get_ready_for_the_future_of_css","url":"/confs/2017_cssconf_eu/get_ready_for_the_future_of_css.html"},"getting_reactive_with_css":{"title":"Getting Reactive with CSS","description":"As user interfaces evolve and become more interactive, design requirements become more complex. By combining CSS variables with reactive programming in JS, we can now express animations, styles, layout, and more in ways never before possible with CSS. In this talk, we’ll explore what functional reactive programming is, why it is incredibly useful, and how we can leverage the power of CSS variables to push the limits of styling the web.","speaker":"David Khourshid","twitter":"davidkpiano","video":null,"tags":[],"layout":"talk","weight":2,"content":" Notes CSS is not powerful but that's a good thing You should use the language with least power to accomplish what you want Because lines between webapps and native apps are blurring, microinteractions are crucial to reduce cognitive load. Making web interactions easier to make with CSS CSS Variables Performance setting a css variable on a parent element is twice as fast as inline styles Support in all major browsers Functional & Reactive Observables Spec (rxjs) Marble diagrams Opinion Interesting stress on moving styling back to CSS and just sending variables over from JS or any other language. Related Links Related Links | Rating --- | --- ","srcFilePath":"src/pages/confs/2017_cssconf_eu/getting_reactive_with_css.md","id":"getting_reactive_with_css","url":"/confs/2017_cssconf_eu/getting_reactive_with_css.html"},"lets_build_a_css_game":{"title":"Let’s Build a CSS Game","description":"Let’s live code a game together using just CSS and HTML! This talk will demonstrate the power of CSS and will teach a few fun tips as tricks as we build a simple game. It’ll be based in Sass — using data structures like matrices and HTML counter-incrementing, and a little bit of web magic to tie it all together. This talk will inspire you to play with and create your own CSS games, pushing the boundaries of what’s expected from the language itself.","speaker":"Una Kravets","twitter":"una","video":null,"tags":["css","live"],"layout":"talk","weight":2,"content":" Notes Opinion Fun live coding session, specially interesting the css pixelart technique Related Links Related Links | Rating --- | --- ","srcFilePath":"src/pages/confs/2017_cssconf_eu/lets_build_a_css_game.md","id":"lets_build_a_css_game","url":"/confs/2017_cssconf_eu/lets_build_a_css_game.html"},"scaffolding_css_for_scale":{"title":"Scaffolding CSS for Scale?","description":"Ever thought about localising your site, but realised it led to a lot of messy duplication? Do you want to re-use component styles, but have some styles overwrite others due to that cascade? Not sure where to start with CSS architecture?\nIn this talk, you'll learn how to get started with your own lightweight, localised CSS setup. We'll go through how we use Grandstand, a CSS framework built by BBC Sport, as the scaffolding for our CSS. Starting with bare bones of just ~10kb, it has the flexibility to allow layouts in 10 scripts for 20+ languages, and we’re using it across the BBC News & Sport sites.","speaker":"Sareh Heidari","twitter":"sareh88","videoid":null,"tags":["css","frameworks"],"layout":"talk","weight":2,"content":" Notes BBC News Lots of users Lots of pages Easyc to reuse Localisable Lightweight Grandstand Dont want components with repeated CSS Namespace all the things (BEML) Components Objects (gs-o-*) - 11 different ones (bullet pattern, ...) Utilities (gs-u-*) - Standardize things (margins, paddings, display, float,...) Sass Tools - Reusable colour variables and mixins GEL Typography GEL Grid GEL Iconography Localization Content Typography Same one doesn't really work with different scripts. Kerning, line heights, font sizes... Layouts Function flip() for values @if $rtl for properties - {lb} prop {rb} syntax tool How to build your own Choose things Standard spacing unit Breakpoints and typography suited to your content Colour Palette Keep it lightweight Choose patterns carefully Do you really need that variation Communicate with others! Opinion Talk focused on a particular CSS framework, close to what we built with LexiconCSS. Important to check GEL, BBC experience language at least, as a shared trend. Related Links Related Links | Rating --- | --- Grandstand | ★★★☆☆ GEL | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/scaffolding_css_for_scale.md","id":"scaffolding_css_for_scale","url":"/confs/2017_cssconf_eu/scaffolding_css_for_scale.html"},"the_road_for_styled_components":{"title":"The road to styled components: CSS in component-based systems","description":"Building user interfaces on the web is hard, because the web, and thus CSS, was inherently made for documents. Because UIs fundamentally are not documents, we've seen a mindset shift towards building component-based system.\nThe rise of JavaScript frameworks like React, Ember and recently Angular 2, the effort of the W3C to standardize a web-native component system, pattern libraries and styleguides being considered 'the right way to build web applications' and many other things have illuminated this revolution – we are now in the 'Component Age'.\nWith that and a few more things in mind, Max along with Glen Maddern (co-creator of css-modules) sat down and started thinking about styling in this new era. They took the best of CSS and the Web to build a new way to style component-based systems. In this talk, Max will describe what they thought about and why they arrived where they did – <💅> styled-components.","speaker":"Glen Maddern","twitter":"glenmaddern","video":null,"tags":["css","css-in-js"],"layout":"talk","weight":2,"content":" Notes CSS-in-JS is worth your time Separation of concerns is about encapsulation and not technologies Hide implementation details and make it more semantic What if it's worse than just CSS? Styled Components CSS-in-JS for CSS folks / Component-centric styling Encapsulate the relationship between styles and components Builtin theming is really nice Opinion Improvised talk in 24h with good thoughts about where CSS-in-JS fits Related Links Related Links | Rating --- | --- Styled Component. | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/the_road_for_styled_components.md","id":"the_road_for_styled_components","url":"/confs/2017_cssconf_eu/the_road_for_styled_components.html"},"where_does_css_come_from":{"title":"Where does CSS come from?","description":"Understanding how CSS is developed is more than an academic exercise. It gives you a way of understanding why things are weird, which is a good starting point to avoiding or fixing weirdness. It can give you an early heads up as to what might be happening in the very near future. It also opens up an opportunity to be part of the process, to contribute to CSS - just like any open source project. Then once we have new CSS on the horizon, we can all be part of encouraging browser vendors to ship it!","speaker":"Rachel Andrew","twitter":"rachelandrew","video":null,"tags":["css","specs"],"layout":"talk","weight":2,"content":" Notes It comes from 1996 (IE3) Don't break the web! Everything still works. All is backwards compatible Where does it come from today CSS WG Browser vendor members Ebook/Epubs members Specs originate from Browser vendors CSS user agents Companies (adobe) CSS WG itself CSS Grid Spec First public working draft in 2011 A snapshot of the state of a specification at a particular date The editor's draft is the current document It goes back to the CSS Advanced Layout Module spec (2005) Experimental implementations (vendor prefixes or flags) IE10 implemented it as experimental prefixed feature Bloomberg sponsored the implementation in Blink and Webkit With prefixes, features are available, making the spec changes way harder By using experimental impls, community can influence specs - gutter Browsers implement alongside spec development CSS Grid Candidate Recommendation (2016) It is ready to gather implementation experience Proposes recommendation Requires 2 different interoperable implementations of each feature There are at-risk implementations that might not be implemented by 2 diff implementors As of March 2017 Grid is in all Browsers! Why it takes so long? Needs to be implemented Priorities Does it make sense? Will it break anything? Why are some things weird? Opinion Nice overview into the CSS WG and how CSS specs happen, evolve and can be influenced. Related Links Related Links | Rating --- | --- CSS WG Editor Drafts | ★★★☆☆ @csswg | ★★★☆☆ CSS Current Work & how to participate | ★★★☆☆ Report Browser Bugs | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/where_does_css_come_from.md","id":"where_does_css_come_from","url":"/confs/2017_cssconf_eu/where_does_css_come_from.html"}},"title":"CSSConf.eu 2017","description":"Dedicated to everyone who loves and writes CSS: On May 5 2017, CSSconf EU will gather the international CSS community in Berlin, Germany. This is your chance to meet top-notch engineers & web designers, world-class speakers, and CSS-loving people at this one-day, one-track conference.","layout":"conference","logo":"cssconfeu.png","icon":"pen","weight":1,"playlist":"PLlgxAbM67lYJRnZlE8nLsQAXxa4pGXO3I","content":" {$page.description}","srcFilePath":"src/pages/confs/2017_cssconf_eu/index.md","id":"2017_cssconf_eu","url":"/confs/2017_cssconf_eu","childIds":["a_unified_styling_language","css_art_history_101","css_and_the_first_meaningful_paint","css_and_the_hierarchy_problem","data_sketches_a_visualization_a_month","get_ready_for_the_future_of_css","getting_reactive_with_css","lets_build_a_css_game","scaffolding_css_for_scale","the_road_for_styled_components","where_does_css_come_from"]},"2017_jsconf_eu":{"children":{"a_brief_history_of_modularity":{"title":"A Brief History of Modularity","description":"“MAKE IT MODULAR,” they said. “IT WILL BE BETTER,” they said. Modularity is a term so common in today’s software industry, that it’s easy to uncritically accept it as a fundamental software development principle. but what does “modularity” actually mean? Where does this idea come from? Where is it going? This talk will walk us through the technical etymology of “modularity”, stepping through the intellectual breakthroughs alongside the fast spread misconceptions. We’ll conclude by exploring the implications of modularity’s ill-examined history on both its current use today, and where it’s heading in the future.","speaker":"Ashley Williams","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/a_brief_history_of_modularity.md","id":"a_brief_history_of_modularity","url":"/confs/2017_jsconf_eu/a_brief_history_of_modularity.html"},"barriers_to_entry_in_the_js_community":{"title":"Barriers to Entry in the JavaScript Community","description":"In this talk, I’ll share what it was like for me as a new JavaScript programmer from a minority background. We’ll then discuss some ideas for creating more welcoming environments. I decided to teach myself programming while working on a startup. When I started out in the JavaScript world, I encountered a variety of challenges. I tried participating in various communities but felt out of place. It was difficult for me to ask questions and I rarely met anyone from a similar background. There were also many people I met along the way who helped me grow as a programmer. We’ll talk about the obstacles that I faced, how I overcame them, and offer suggestions for what we can do to lower the barriers to entry for others.","speaker":"Khalid","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/barriers_to_entry_in_the_js_community.md","id":"barriers_to_entry_in_the_js_community","url":"/confs/2017_jsconf_eu/barriers_to_entry_in_the_js_community.html"},"building_high_quality_javascript_tools":{"title":"Building High-Quality JavaScript Tools","description":"Jest was adopted widely across 100s of companies recently and provides an immersive testing experience. We’ll take a deeper look at JavaScript Testing with Jest and what it takes to turn a tool into a product with a delightful experience.","speaker":"Chris Pojer","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/building_high_quality_javascript_tools.md","id":"building_high_quality_javascript_tools","url":"/confs/2017_jsconf_eu/building_high_quality_javascript_tools.html"},"can_you_read_me_creative_js_to_make_computer_science_fun":{"title":"Can You Read Me? Creative JavaScript to Make Computer Science Fun","description":"Two web developers who are full of curiosity to learn all about machines and code met at a meetup. Unsatisfied with traditional computer science textbook and what we felt like not so learner friendly software engineering landscape, we decided to learn by working together in the format we enjoy the most - creative project. We are building machines (both software and hardware) in JavaScript to send secret messages to each other. Different forms of data blob are exchanged periodically as a message. In order to read those messages, each has to learn and build a system to decode the data. This talk will tell the story of the machines, their parts, and the possibilities of remote creative collaboration. You’ll come away with fresh inspiration on how JavaScript can be used to learn computer science concepts the enjoyable way.","speaker":"Mariko Kosaka & Suz Hinton","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/can_you_read_me_creative_js_to_make_computer_science_fun.md","id":"can_you_read_me_creative_js_to_make_computer_science_fun","url":"/confs/2017_jsconf_eu/can_you_read_me_creative_js_to_make_computer_science_fun.html"},"dynamic_video_in_the_browser":{"title":"Dynamic video in the browser","description":"Rather than just playing videos in the browser; what if you could edit and composite them on the fly? Just as the Web Audio API allowed for dynamic audio manipulation, we can now do similar things for video, opening up the creative possibilities for interactive visual experiences on the web. In this talk I’ll show you how, with some live coded demos using an open source library. I’ll also talk about how the BBC is using these techniques to explore the future of TV.","speaker":"Matthew Shotton","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/dynamic_video_in_the_browser.md","id":"dynamic_video_in_the_browser","url":"/confs/2017_jsconf_eu/dynamic_video_in_the_browser.html"},"emoji_web_components_and_art":{"title":"Emoji, Web Components, and Art","description":"Making art on the web is easy, if you got the right tools. HTML has styled divs. JavaScript has canvas. I have an emoji keyboard. But what if our tools were better, and making art was easier? What if there was a magical widget that transformed any word into emoji word art? Or an image into pixels, which you can then style with CSS? What if it was easy to build these tools, embed them on any sites, and give them out to people, so that they can make art? Spoilers: it is, and I’m going to tell you about it.","speaker":"Monica Dinculescu","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/emoji_web_components_and_art.md","id":"emoji_web_components_and_art","url":"/confs/2017_jsconf_eu/emoji_web_components_and_art.html"},"how_to_be_a_web_artist":{"title":"How To Be A Web A/V Artist","description":"Come and be fascinated by the world of audio visualisation in a browser. This isn’t just about creating stunning data vis to music! We see how we can pipe data realtime into custom properties to enhance our visuals. The speaker re-addresses how we analyse sound via the Web Audio API and proposes a better way of processing the data to better suit music. And, to top it all off, we harness the Web MIDI API for full hardware control as well. You may not think it, but this really is a talk with a great deal of take-aways and new techniques for you to consider in your coding life.","speaker":"Ruth John","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/how_to_be_a_web_artist.md","id":"how_to_be_a_web_artist","url":"/confs/2017_jsconf_eu/how_to_be_a_web_artist.html"},"how_to_break_an_api":{"title":"How to Break an API: How Community Values Influence Practices","description":"Breaking the API of a package can create severe disruptions downstream, but package maintainers have flexibility in whether and how to perform a change. Through interviews and a survey, we found that developers within a community or platform often share cohesive practices (e.g., semver, backporting, synchronized releases), but that those practices differ from community to community, and that most developers are not aware of alternative strategies and practices, their tradeoffs, and why other communities adopt them. Most interestingly, it seems that often practices and community consensus seems to be driven by implicit values in each community, such as stability, rapid access, or ease to contribute. Understanding and discussing values openly can help to understand and resolve conflicts, such as discussions between demands for more stability and a pursuit of frequent and disruptive innovations.","speaker":"Christian Kästner","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/how_to_break_an_api.md","id":"how_to_break_an_api","url":"/confs/2017_jsconf_eu/how_to_break_an_api.html"},"immutable_data_structures_for_functional_js":{"title":"Immutable data structures for functional JS","description":"Functional programming has been gaining a lot of popularity in the JS community, and with good reason: rejecting side-effects and mutability - in-place changes to data - helps avoid a lot of headaches. But when you refuse to mutate objects, you have to create a whole new object each time something changes, which can slow things down and eat up memory, making functional programming seem inefficient. That’s where immutable data structures come in - to save the day, and time and space! Also called “persistent data structures”, they help you efficiently make new “modified” versions of immutable objects, by reusing parts of the old object that you don’t need to change. In this talk we’ll take a look at how these data structures work, why they’re fantastic for functional programming, and how we can easily use them in our JS code thanks to libraries like Mori and Immutable.js.","speaker":"Anjana Vakil","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/immutable_data_structures_for_functional_js.md","id":"immutable_data_structures_for_functional_js","url":"/confs/2017_jsconf_eu/immutable_data_structures_for_functional_js.html"},"keep_the_internet_weird":{"title":"Keep the Internet Weird","description":"The early 2000s bred a new generation of web developers and designers out of the pure need of creative expression. Teens didn’t have access to StackOverflow, and couldn’t easily Google their coding problems—so they turned to each other. Through collaboration and inspiration from others that were blazing their own way, they created their own unique personal sites without any regard for standards. Let’s explore the world of CSS via ‘filter: dropshadow’, JavaScript snippets, 8 pixel fonts and take a look back at what the web looked like before we followed the rules.","speaker":"Rachel White","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/keep_the_internet_weird.md","id":"keep_the_internet_weird","url":"/confs/2017_jsconf_eu/keep_the_internet_weird.html"},"maintaining_an_oss_project":{"title":"Maintaining an OSS Project (Babel)","description":"How did piece of satire lead to a ASCII picture of Guy Fieri getting merged into the Babel source and our t-shirt design? Who is left_pad? How did I go from complete ignorance of one of the biggest tools used in the JavaScript ecosystem to becoming a user, contributor, and eventually maintainer? What are some of the interesting stories that maintaining a project lead to? In this talk, I hope to bring home the fact maintainers are just developers and people like everyone else.","speaker":"Henry Zhu","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/maintaining_an_oss_project.md","id":"maintaining_an_oss_project","url":"/confs/2017_jsconf_eu/maintaining_an_oss_project.html"},"making_the_jump":{"title":"Making the Jump: How Desktop-Era Frameworks Can Thrive on Mobile","description":"Today’s most popular frameworks come from a time when the world was a different place. Ember’s first rendering engine, for example, was optimized around the performance gotchas of Internet Explorer 6. IE6 has since faded into history, and smartphones with spotty connectivity and occasionally dodgy hardware have become the lowest common denominator that we must optimize for. In this talk, we’ll discuss how smartphones fundamentally change the assumptions we make about architecting applications for the web. Then, we’ll cover how we can embrace these new mobile constraints to build even better apps—for everyone. Finally, we’ll look at the techniques used by desktop-era libraries and what they’re doing to become great for the mobile web.","speaker":"Tom Dale","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/making_the_jump.md","id":"making_the_jump","url":"/confs/2017_jsconf_eu/making_the_jump.html"},"sequential_art_comics_and_svgs":{"title":"Sequential Art, Comics & SVGs","description":"Creative expression on the web shouldn’t be limited to people who know how to code. In this talk, we’ll explore how to repurpose the sophisticated tools that designers already know to build interactive, dynamic art on the web. I’ll demonstrate this principle through a JavaScript library that allows designers to create full-bleed animated comics, graphic novelas, story boards, sequential art and so on, using a tool they already know: Adobe Illustrator. By combining SVGs with powerful three-dimensional motion effects, we’ll learn how to tap into unexplored capabilities in the browser and break out of the 1D world and into the 3D universe. We’ll use simple techniques to build animations that are high-resolution, performant, and best of all, easily accessible to designers by allowing them to use their own tools to “code” in their own language and thus deliver cinematic-quality stories on the web without ongoing engineering assistance.","speaker":"Zahra Jabini","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/sequential_art_comics_and_svgs.md","id":"sequential_art_comics_and_svgs","url":"/confs/2017_jsconf_eu/sequential_art_comics_and_svgs.html"},"the_browser_hackers_guide":{"title":"The Browser Hackers Guide To Instantly Loading Everything","description":"Venture deep into the belly of the browser to uncover the secret incantations to instantly load anything. We’ll even back it up with rock-hard data. Will we use preload, prefetch and preconnect? What about HTTP/2 Server Push? or Service Worker? and how the heck do we ship JavaScript bundles that don’t break the bank on mobile? Discover this and more tips to delight your users in the Browser Hacker’s guide to instantly loading EVERYTHING.","speaker":"Addy Osmani","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/the_browser_hackers_guide.md","id":"the_browser_hackers_guide","url":"/confs/2017_jsconf_eu/the_browser_hackers_guide.html"},"whats_new_in_netscape_navigator_2":{"title":"What's new in Netscape Navigator 2.0","description":"How can we know how good we’ve got it without really understanding how good we used to have it? JavaScript was first released with Netscape Navigator 2.0 in September 1995 - can an application from today exist in the browsers of yesterday? Just how different was the development experience then compared to now? Is it feasible to implement a modern Web application in the browser that pioneered client-side development? What would code from 1995 look like rewritten with today’s JavaScript?","speaker":"Marcin Szczepanski","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/whats_new_in_netscape_navigator_2.md","id":"whats_new_in_netscape_navigator_2","url":"/confs/2017_jsconf_eu/whats_new_in_netscape_navigator_2.html"},"yes_your_site_can_be_accessible":{"title":"YES, your site too can (and should) be accessible. Lessons learned from building FT.com","description":"In 2016, we at The Financial Times launched a new version of our website to great success. It broke ground on key areas in which we’d set out to excel and measured very closely, like performance, resilience and usability. But one day, and rather serendipitously, we realized we had largely forgotten to measure one thing: accessibility. And you can’t improve what you don’t measure. In this talk I will go over how we went from being generally oblivious about accessibility to making it a core part of our process across multiple divisions. I will share the roadblocks we found and the lessons we learned, along with tangible solutions you can integrate them into your own project today, regardless of available time, budget or support.","speaker":"Laura Carvajal","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/yes_your_site_can_be_accessible.md","id":"yes_your_site_can_be_accessible","url":"/confs/2017_jsconf_eu/yes_your_site_can_be_accessible.html"},"you_dont_need_amp_for_that":{"title":"You don't need AMP for that","description":"But it makes things so nice and easy :) AMP at its heart is a JavaScript library for building super fast static web pages. Being purely web tech based, we can understand how it works and take the best ideas and use them in non-AMP projects. This talk will dig into the nitty gritty details of AMP and uncover how the sausage is made so to say. We’ll talk about network concurrency, font loading, image optimizations, and this magic thing called pre-rendering. Even if you never plan to use AMP, you’ll learn new tricks that you’ll be able to use to speed up your next project!","speaker":"Chen Shay","twitter":null,"video":null,"tags":["js"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- foo | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/you_dont_need_amp_for_that.md","id":"you_dont_need_amp_for_that","url":"/confs/2017_jsconf_eu/you_dont_need_amp_for_that.html"}},"title":"JSConf.eu 2017","description":"JSConf EU is a professional, not-for-profit, labour-of-love conference for the JavaScript community. It’s a two day affair, with many related side events in the days surrounding it. JSConf EU is an invitation for the community to come together and for new people to get to know and join the community.","layout":"conference","logo":"jsconfeu.png","icon":"heart-full","weight":1,"playlist":"PL37ZVnwpeshH37NxpV6XbgdDpY-w48hMd","content":" {$page.description}","srcFilePath":"src/pages/confs/2017_jsconf_eu/index.md","id":"2017_jsconf_eu","url":"/confs/2017_jsconf_eu","childIds":["a_brief_history_of_modularity","barriers_to_entry_in_the_js_community","building_high_quality_javascript_tools","can_you_read_me_creative_js_to_make_computer_science_fun","dynamic_video_in_the_browser","emoji_web_components_and_art","how_to_be_a_web_artist","how_to_break_an_api","immutable_data_structures_for_functional_js","keep_the_internet_weird","maintaining_an_oss_project","making_the_jump","sequential_art_comics_and_svgs","the_browser_hackers_guide","whats_new_in_netscape_navigator_2","yes_your_site_can_be_accessible","you_dont_need_amp_for_that"]}},"childIds":["2017_cssconf_eu","2017_jsconf_eu","2017_jsday_es","search"]}},"childIds":["confs"]}}