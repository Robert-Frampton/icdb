{"title":"ICDB","githubRepo":"jbalsas/icdb","googleAnalytics":"UA-37033501-5","index":{"title":"Home","description":"Something nice and compelling about the project. Make it short and sweet.","content":" Copyright © 2017 Liferay, Inc Powered by WeDeploy™ ","srcFilePath":"src/pages/index.soy","id":"pages","url":"/.","children":{"confs":{"title":"Conferences","description":"Start exploring your favourite talks and conferences.","content":" Conferences Explore, comment and share your favourite tech talks and conferences. Choose a Conference Each one provides additional information of every talk of the event. ","srcFilePath":"src/pages/confs/index.soy","id":"confs","url":"/confs","children":{"search":{"title":"Search","description":"Find what you're looking for in the documentation.","hidden":true,"content":" Search Talks Explore, comment and share your favourite tech talks and conferences. ","srcFilePath":"src/pages/confs/search.soy","id":"search","url":"/confs/search.html"},"2017_cssconf_eu":{"children":{"a_unified_styling_language":{"title":"A Unified Styling Language","description":"In the past few years, we’ve witnessed a massive increase in the amount of CSS experimentation, with ideas like CSS Modules and—most controversially—the rise of CSS-in-JS. But does mixing our styles and logic run counter to the original ideas of CSS? Does it break progressive enhancement? In this talk, we’ll take an empathetic look at these new approaches, how they relate to the history of CSS, and why they might possibly hold the key to the future of CSS—all from the point-of-view of someone who has been writing CSS since 1999.","speaker":"Mark Dalgleish","twitter":"markdalgleish","video":null,"tags":["css","css-in-js"],"layout":"talk","weight":2,"content":" Notes Scoped Styles The hardest problem in front-end Different conventions: oocs, smacs, bem Why just convention? Nice to have clases generated for you You can still separate your styles into a different file! CSS Modules Critical CSS: Inlining styles for the current page to speed up initial render Smarter Optimisations: Treat classes like code Package Management: Manual CSS inclusion not coupled to a module system Non-Browser Styling: Different renderers Opinion Nice take on generated classes Lots of good resources Nice hints as to where design systems are going Related Links Related Links | Rating --- | --- oocss | ★★★☆☆ smacs | ★★★☆☆ BEM | ★★★☆☆ Glamor | ★★★☆☆ JSS | ★★★☆☆ Critical | ★★★☆☆ Aphrodite | ★★★☆☆ Atomic | ★★★☆☆ Tachyons | ★★★☆☆ Styletron | ★★★☆☆ Polished | ★★★☆☆ Yoga | ★★★☆☆ react-native-web | ★★★☆☆ react-primitives | ★★★☆☆ ReactXP | ★★★☆☆ React Sketch.app | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/a_unified_styling_language.md","id":"a_unified_styling_language","url":"/confs/2017_cssconf_eu/a_unified_styling_language.html"},"css_and_the_first_meaningful_paint":{"title":"CSS and the first meaningful paint","description":"To render a webpage browsers needs to go through the complex dance of networking, parsing and painting before any content can be displayed to your user. Over the years, we've developed mechanisms and hacks to aid the browser at each stage of this process, but these have always come at some cost or trade-off.\nHow can we utilize modern web platform features to load our CSS as fast as possible? Should we still be inlining our critical content into the document or instead, how can HTTP/2 server push and Service Workers help us?\nIn this talk we will take a journey exploring the current, past, and future best-practices for loading CSS in the browser and how we can achieve a first meaningful paint within 1000ms. Ultimately creating a faster, more resilient experience for our users.","speaker":"Patrick Hamann","twitter":"patrickhamann","video":null,"tags":["css","performance"],"layout":"talk","weight":2,"content":" Notes How do you measure performance? New metrics are user-oriented, focused on users needs and not our delivery. First Meaningful Paint Not exposed as an API yet, but talking about it. Read whitepaper! You can use Lighthouse to audit ttfmp Use Webpagetest to test on real devices in real conditions There's no single profile for the same user (conditions change) Technique | Pros | Cons --- | --- | --- Inline critical CSS | no blocking, no spof, no critical request, instant painting | reflow, cache, maintenance and automation Preload (what are your critical resources | indicate hidden resources, dictate priority, separate fetch from exec | easy to create contention, requires server logic Server Push (HTTP/2) | we eliminate a request | We get a penalty, not an improvement Async Push | | What about repeat view We have no way to indicate how things are cached - PRPL pattern! Future Early hints 103 response CACHE_DIGEST Opinion Interesting talk with emphasis in the importance of using the proper tools Related Links Related Links | Rating --- | --- Lighthouse | ★★★☆☆ WebPageTest | ★★★☆☆ Time to First Meaningful Paint Proposal | ★★★☆☆ Preload Specification Working Draft | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/css_and_the_first_meaningful_paint.md","id":"css_and_the_first_meaningful_paint","url":"/confs/2017_cssconf_eu/css_and_the_first_meaningful_paint.html"},"css_and_the_hierarchy_problem":{"title":"CSS and the hierarchy problem: What makes a CSS developer?","description":"This talk is about hierarchies: as CSS hurtles toward being object- and systems-oriented, the titles and responsibilities of designer and developer become much more fluid and yet, we continue to categorise. We draw lines between front and back end, between CSS and Javascript (“CSS isn’t _real_ development”), and even between CSS disciplines, but why? Furthermore, we implicitly draw these lines between white male developers and everyone else. This results in damaging hierarchies that threaten to devalue the work we do in diversifying CSS — both as a language and as a community.","speaker":"Ivana McConnell","twitter":"ivanamcconnell","video":null,"tags":["css","community"],"layout":"talk","weight":2,"content":" Notes What do you do? Originally CSS = Design, but the web is growing so it becomes much more than that CSS isn't really development But CSS is more than that. It touches everything. Presentation affects interaction and experience The repetition, makes it become an assumption, so the implications that one is harder and better than the other. We make wrong decissions because of that. Undervaluing CSS has consequences For salary For teams For personal health For our products Opinion A somehow bitter and reivindicative talk about the perception of CSS developement and its implications. Related Links Related Links | Rating --- | --- Seed.css | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/css_and_the_hierarchy_problem.md","id":"css_and_the_hierarchy_problem","url":"/confs/2017_cssconf_eu/css_and_the_hierarchy_problem.html"},"css_art_history_101":{"title":"CSS Art History 101: Decoding Layout Through The Ages","description":"For centuries the visual arts have been used to tell stories, warn people about dangers and invoke emotion. Today we use the internet for all those purposes and more. Just as the Vatican employed painters to spread their message – it will be the developers and designers who will lead us into the next Renaissance. But there is still a lot to learn from the great masters. In this talk, we will flexbox the Golden Ratio with Leonardo DaVinci, up the pixel ratio for our devices with the Impressionists & ”inspect elements” of some iconic works of art to make the web a more beautiful place.","speaker":"Patricia Realini","twitter":"patriciarealini","video":null,"tags":["css","inspiration"],"layout":"talk","weight":2,"content":" Notes Opinion Very abstract talk about art and css, just that no css at all was shown Related Links ","srcFilePath":"src/pages/confs/2017_cssconf_eu/css_art_history_101.md","id":"css_art_history_101","url":"/confs/2017_cssconf_eu/css_art_history_101.html"},"data_sketches_a_visualization_a_month":{"title":"Data sketch|es: A Visualization a Month","description":"Data sketches is a collaboration between Nadieh and Shirley, where they choose a topic and visualize it by the end of the month. The collaboration started for many reasons: they weren’t creating as many personal data visualization projects, so they were looking for the motivation to make more. They wanted to explore their creativity, to experiment with the tools that are out there, to learn from each other, and to have fun.\nIn this talk, Shirley and Nadieh will share the lessons they learned while working on data sketches. They will highlight their favorite months of data, sketches, and code: what made them their favorites, the mistakes made along the way, and how they overcame them. They hope that by sharing their visualizations’ humble, ugly duckling beginnings and their many (embarrassing) iterations, that it will inspire others to create their own unique and compelling visualizations.","speaker":"Nadieh Bremer & Shirley Wu","twitter":"sxywu","video":null,"tags":["css","data-visualization"],"layout":"talk","weight":2,"content":" Notes 1 topic per month to visualize Data Idea first, always Be curious, get creative with the data gathering (but play responsibly) Get a feeling of accuracy and completeness of your data Sketch Design with code (the actual data has a great impact) Go back and forth with the sketch and code to figure out what works and what doesnt Code Remix whats out there already. No need to start from scratch always Really understand the tools you use to go beyond what's already there Expect struggles (learn to love math) The other stuff matters too. Pay attention to the little details. animations, notes... Opinion Nice talk about a beautiful data-viz project Related Links Related Links | Rating --- | --- datasketch.es | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/data_sketches_a_visualization_a_month.md","id":"data_sketches_a_visualization_a_month","url":"/confs/2017_cssconf_eu/data_sketches_a_visualization_a_month.html"},"get_ready_for_the_future_of_css":{"title":"Get Ready for the Future of CSS!","description":"It’s time to start thinking about new and upcoming CSS features that will boost your workflow and give you more power and flexibility when building your projects. This talk covers the latest CSS features, including: color manipulation, custom properties, selectors level 4, and what's new in media queries. We’ll also have a look at in-browser design features like blend modes and clip-path.","speaker":"Guil Hernandez","twitter":"guilh","video":null,"tags":["css","specs"],"layout":"talk","weight":2,"content":" Notes CSS Variables (custom properties) References to values you can reuse --property-name : value; and follow the rules of the cascade and can be scoped Preprocessor variables: Static Do not run in the browser Not aware of the DOM structure You can create nice theming structures based on when the element appears without complex nested selectors, just changing the variable value. You can only use them in values. Compositing & Blending background-blend-mode mix-blend-mode backdrop-filter Shapes Use geometric shapes as css values to layout text around shape-outside + polygon() clip-path Colors Color Module Level 4 8 digit hex colors color-mod() - apply color adjustments Selector Selectors Level 4 Working Draft :matches :required | :optional :valid | :invalid @supports (feature queries) Opinion Interesting theming take on css variables without having to be dom-aware. Very nice summary of upcoming css features Related Links Related Links | Rating --- | --- CSS Shapes Editor | ★★★☆☆ Clippy | ★★★☆☆ Selectors Level 4 | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/get_ready_for_the_future_of_css.md","id":"get_ready_for_the_future_of_css","url":"/confs/2017_cssconf_eu/get_ready_for_the_future_of_css.html"},"getting_reactive_with_css":{"title":"Getting Reactive with CSS","description":"As user interfaces evolve and become more interactive, design requirements become more complex. By combining CSS variables with reactive programming in JS, we can now express animations, styles, layout, and more in ways never before possible with CSS. In this talk, we’ll explore what functional reactive programming is, why it is incredibly useful, and how we can leverage the power of CSS variables to push the limits of styling the web.","speaker":"David Khourshid","twitter":"davidkpiano","video":null,"tags":[],"layout":"talk","weight":2,"content":" Notes CSS is not powerful but that's a good thing You should use the language with least power to accomplish what you want Because lines between webapps and native apps are blurring, microinteractions are crucial to reduce cognitive load. Making web interactions easier to make with CSS CSS Variables Performance setting a css variable on a parent element is twice as fast as inline styles Support in all major browsers Functional & Reactive Observables Spec (rxjs) Marble diagrams Opinion Interesting stress on moving styling back to CSS and just sending variables over from JS or any other language. Related Links Related Links | Rating --- | --- ","srcFilePath":"src/pages/confs/2017_cssconf_eu/getting_reactive_with_css.md","id":"getting_reactive_with_css","url":"/confs/2017_cssconf_eu/getting_reactive_with_css.html"},"lets_build_a_css_game":{"title":"Let’s Build a CSS Game","description":"Let’s live code a game together using just CSS and HTML! This talk will demonstrate the power of CSS and will teach a few fun tips as tricks as we build a simple game. It’ll be based in Sass — using data structures like matrices and HTML counter-incrementing, and a little bit of web magic to tie it all together. This talk will inspire you to play with and create your own CSS games, pushing the boundaries of what’s expected from the language itself.","speaker":"Una Kravets","twitter":"una","video":null,"tags":["css","live"],"layout":"talk","weight":2,"content":" Notes Opinion Fun live coding session, specially interesting the css pixelart technique Related Links Related Links | Rating --- | --- ","srcFilePath":"src/pages/confs/2017_cssconf_eu/lets_build_a_css_game.md","id":"lets_build_a_css_game","url":"/confs/2017_cssconf_eu/lets_build_a_css_game.html"},"scaffolding_css_for_scale":{"title":"Scaffolding CSS for Scale?","description":"Ever thought about localising your site, but realised it led to a lot of messy duplication? Do you want to re-use component styles, but have some styles overwrite others due to that cascade? Not sure where to start with CSS architecture?\nIn this talk, you'll learn how to get started with your own lightweight, localised CSS setup. We'll go through how we use Grandstand, a CSS framework built by BBC Sport, as the scaffolding for our CSS. Starting with bare bones of just ~10kb, it has the flexibility to allow layouts in 10 scripts for 20+ languages, and we’re using it across the BBC News & Sport sites.","speaker":"Sareh Heidari","twitter":"sareh88","videoid":null,"tags":["css","frameworks"],"layout":"talk","weight":2,"content":" Notes BBC News Lots of users Lots of pages Easyc to reuse Localisable Lightweight Grandstand Dont want components with repeated CSS Namespace all the things (BEML) Components Objects (gs-o-*) - 11 different ones (bullet pattern, ...) Utilities (gs-u-*) - Standardize things (margins, paddings, display, float,...) Sass Tools - Reusable colour variables and mixins GEL Typography GEL Grid GEL Iconography Localization Content Typography Same one doesn't really work with different scripts. Kerning, line heights, font sizes... Layouts Function flip() for values @if $rtl for properties - {lb} prop {rb} syntax tool How to build your own Choose things Standard spacing unit Breakpoints and typography suited to your content Colour Palette Keep it lightweight Choose patterns carefully Do you really need that variation Communicate with others! Opinion Talk focused on a particular CSS framework, close to what we built with LexiconCSS. Important to check GEL, BBC experience language at least, as a shared trend. Related Links Related Links | Rating --- | --- Grandstand | ★★★☆☆ GEL | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/scaffolding_css_for_scale.md","id":"scaffolding_css_for_scale","url":"/confs/2017_cssconf_eu/scaffolding_css_for_scale.html"},"the_road_for_styled_components":{"title":"The road to styled components: CSS in component-based systems","description":"Building user interfaces on the web is hard, because the web, and thus CSS, was inherently made for documents. Because UIs fundamentally are not documents, we've seen a mindset shift towards building component-based system.\nThe rise of JavaScript frameworks like React, Ember and recently Angular 2, the effort of the W3C to standardize a web-native component system, pattern libraries and styleguides being considered 'the right way to build web applications' and many other things have illuminated this revolution – we are now in the 'Component Age'.\nWith that and a few more things in mind, Max along with Glen Maddern (co-creator of css-modules) sat down and started thinking about styling in this new era. They took the best of CSS and the Web to build a new way to style component-based systems. In this talk, Max will describe what they thought about and why they arrived where they did – <💅> styled-components.","speaker":"Glen Maddern","twitter":"glenmaddern","video":null,"tags":["css","css-in-js"],"layout":"talk","weight":2,"content":" Notes CSS-in-JS is worth your time Separation of concerns is about encapsulation and not technologies Hide implementation details and make it more semantic What if it's worse than just CSS? Styled Components CSS-in-JS for CSS folks / Component-centric styling Encapsulate the relationship between styles and components Builtin theming is really nice Opinion Improvised talk in 24h with good thoughts about where CSS-in-JS fits Related Links Related Links | Rating --- | --- Styled Component. | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/the_road_for_styled_components.md","id":"the_road_for_styled_components","url":"/confs/2017_cssconf_eu/the_road_for_styled_components.html"},"where_does_css_come_from":{"title":"Where does CSS come from?","description":"Understanding how CSS is developed is more than an academic exercise. It gives you a way of understanding why things are weird, which is a good starting point to avoiding or fixing weirdness. It can give you an early heads up as to what might be happening in the very near future. It also opens up an opportunity to be part of the process, to contribute to CSS - just like any open source project. Then once we have new CSS on the horizon, we can all be part of encouraging browser vendors to ship it!","speaker":"Rachel Andrew","twitter":"rachelandrew","video":null,"tags":["css","specs"],"layout":"talk","weight":2,"content":" Notes It comes from 1996 (IE3) Don't break the web! Everything still works. All is backwards compatible Where does it come from today CSS WG Browser vendor members Ebook/Epubs members Specs originate from Browser vendors CSS user agents Companies (adobe) CSS WG itself CSS Grid Spec First public working draft in 2011 A snapshot of the state of a specification at a particular date The editor's draft is the current document It goes back to the CSS Advanced Layout Module spec (2005) Experimental implementations (vendor prefixes or flags) IE10 implemented it as experimental prefixed feature Bloomberg sponsored the implementation in Blink and Webkit With prefixes, features are available, making the spec changes way harder By using experimental impls, community can influence specs - gutter Browsers implement alongside spec development CSS Grid Candidate Recommendation (2016) It is ready to gather implementation experience Proposes recommendation Requires 2 different interoperable implementations of each feature There are at-risk implementations that might not be implemented by 2 diff implementors As of March 2017 Grid is in all Browsers! Why it takes so long? Needs to be implemented Priorities Does it make sense? Will it break anything? Why are some things weird? Opinion Nice overview into the CSS WG and how CSS specs happen, evolve and can be influenced. Related Links Related Links | Rating --- | --- CSS WG Editor Drafts | ★★★☆☆ @csswg | ★★★☆☆ CSS Current Work & how to participate | ★★★☆☆ Report Browser Bugs | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_cssconf_eu/where_does_css_come_from.md","id":"where_does_css_come_from","url":"/confs/2017_cssconf_eu/where_does_css_come_from.html"}},"title":"CSSConf.eu 2017","description":"Dedicated to everyone who loves and writes CSS: On May 5 2017, CSSconf EU will gather the international CSS community in Berlin, Germany. This is your chance to meet top-notch engineers & web designers, world-class speakers, and CSS-loving people at this one-day, one-track conference.","layout":"conference","logo":"cssconfeu.png","icon":"pen","weight":1,"playlist":"PLlgxAbM67lYJRnZlE8nLsQAXxa4pGXO3I","content":" {$page.description}","srcFilePath":"src/pages/confs/2017_cssconf_eu/index.md","id":"2017_cssconf_eu","url":"/confs/2017_cssconf_eu","childIds":["a_unified_styling_language","css_art_history_101","css_and_the_first_meaningful_paint","css_and_the_hierarchy_problem","data_sketches_a_visualization_a_month","get_ready_for_the_future_of_css","getting_reactive_with_css","lets_build_a_css_game","scaffolding_css_for_scale","the_road_for_styled_components","where_does_css_come_from"]},"2017_jsconf_eu":{"title":"JSConf.eu 2017","description":"JSConf EU is a professional, not-for-profit, labour-of-love conference for the JavaScript community. It’s a two day affair, with many related side events in the days surrounding it. JSConf EU is an invitation for the community to come together and for new people to get to know and join the community.","layout":"conference","logo":"jsconfeu.png","icon":"heart-full","weight":1,"playlist":"PL37ZVnwpeshH37NxpV6XbgdDpY-w48hMd","content":" {$page.description}","srcFilePath":"src/pages/confs/2017_jsconf_eu/index.md","id":"2017_jsconf_eu","url":"/confs/2017_jsconf_eu","children":{"the_browser_hackers_guide":{"title":"Where does CSS come from?","description":"Understanding how CSS is developed is more than an academic exercise. It gives you a way of understanding why things are weird, which is a good starting point to avoiding or fixing weirdness. It can give you an early heads up as to what might be happening in the very near future. It also opens up an opportunity to be part of the process, to contribute to CSS - just like any open source project. Then once we have new CSS on the horizon, we can all be part of encouraging browser vendors to ship it!","speaker":"Rachel Andrew","twitter":"rachelandrew","video":null,"tags":["js","web","performance"],"layout":"talk","weight":2,"content":" Notes Opinion Related Links Related Links | Rating --- | --- CSS WG Editor Drafts | ★★★☆☆ ","srcFilePath":"src/pages/confs/2017_jsconf_eu/the_browser_hackers_guide.md","id":"the_browser_hackers_guide","url":"/confs/2017_jsconf_eu/the_browser_hackers_guide.html"}},"childIds":["the_browser_hackers_guide"]},"2017_jsday_es":{"title":"JSDayES 2017","description":"JSDayES is a two-day multi-track conference (English & Spanish) focused in Javascript and its ecosystem.","layout":"conference","logo":"jsdayes.png","icon":"table","weight":1,"playlist":"PL37ZVnwpeshH37NxpV6XbgdDpY-w48hMd","content":" {$page.description}","srcFilePath":"src/pages/confs/2017_jsday_es/index.md","id":"2017_jsday_es","url":"/confs/2017_jsday_es"}},"childIds":["2017_cssconf_eu","2017_jsconf_eu","2017_jsday_es","search"]}},"childIds":["confs"]}}